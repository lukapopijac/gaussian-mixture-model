(function(){const l=document.createElement("link").relList;if(l&&l.supports&&l.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))s(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function r(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(t){if(t.ep)return;t.ep=!0;const i=r(t);fetch(t.href,i)}})();class X extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.shadowRoot.innerHTML=`
			<style>
				a {
					position: absolute;
					top: 12px;
					right: 12px;
					background-color: #f0f0f0;
					color: #333;
					font-size: 14px;
					padding: 4px 10px;
					border: 1px solid #ccc;
					border-radius: 4px;
					text-align: center;
					text-decoration: none;
					cursor: pointer;
				}
				a:hover {
					background-color: #e0e0e0;
				}
				a:focus {
					outline: none;
					box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.2);
				}
			</style>
			<a href="${this.getAttribute("href")}" target="_blank">GitHub</a>
		`}}customElements.define("github-link",X);const D=Math.sqrt(5.99146);class Y{constructor(l,r,s,t,i){this.canvas=l,this.xMin=r,this.xMax=s,this.yMin=t,this.yMax=i,this.xRangeInv=1/(s-r),this.yRangeInv=1/(i-t),this.ctx=l.getContext("2d")}_point2pixel(l){return{x:this.canvas.width*this.xRangeInv*(l[0]-this.xMin),y:this.canvas.height*this.yRangeInv*(l[1]-this.yMin)}}clearAll(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}points(l,r){this.ctx.lineWidth=.2,this.ctx.strokeStyle="black";for(let s=0;s<l.length;s++){let t=l[s];this.ctx.fillStyle=r?r[s]:"grey",this.ctx.beginPath();let{x:i,y:n}=this._point2pixel(t);this.ctx.arc(i,n,3.5,0,2*Math.PI),this.ctx.fill(),this.ctx.stroke()}}ellipse(l,r,s){s||(s="black");let t=r[0][0],i=r[0][1],n=r[1][1],e=t+n,h=Math.sqrt(e*e*.25-t*n+i*i),c=.5*e+h,o=.5*e-h,u=Math.sqrt(c)*D,d=Math.sqrt(o)*D,f=u*this.canvas.width*this.xRangeInv,p=d*this.canvas.height*this.yRangeInv,w=Math.atan2(i,c-n),{x:S,y:k}=this._point2pixel(l);this.ctx.globalAlpha=.7,this.ctx.strokeStyle=s,this.ctx.fillStyle=s,this.ctx.lineWidth=3,this.ctx.beginPath(),this.ctx.ellipse(S,k,f,p,w,0,2*Math.PI),this.ctx.stroke()}singularity(l){let r=this.canvas.width,s=this.canvas.height,{x:t,y:i}=this._point2pixel(l),n=4,e=8,h=4,c="SINGULARITY",o=14;this.ctx.font="bold "+o+"px sans-serif";let u=this.ctx.measureText(c).width;this.ctx.scale(1,-1),this.ctx.textAlign="center",this.ctx.textBaseline="middle";let d=i<.5*s?1:-1,f=i+60*d,p=t<.5*r?t+.5*u:t-.5*u;p+.5*u+e+n>r&&(p=r-.5*u-e-n),p-.5*u-e-n<0&&(p=.5*u+e+n),f-.5*o-e-n<0&&(f=.5*o+e+n),f+.5*o+e+n>s&&(f=s-.5*o-e-n),this.ctx.beginPath(),this.ctx.moveTo(t,-i),this.ctx.lineTo(p-10,-f+(.5*o+e)*d),this.ctx.lineTo(p-.5*u-e+h,-f+(.5*o+e)*d),this.ctx.arcTo(p-.5*u-e,-f+(.5*o+e)*d,p-.5*u-e,-f+(.5*o+e-h)*d,h),this.ctx.lineTo(p-.5*u-e,-f+(-.5*o-e+h)*d),this.ctx.arcTo(p-.5*u-e,-f+(-.5*o-e)*d,p-.5*u-e+h,-f+(-.5*o-e)*d,h),this.ctx.lineTo(p+.5*u+e-h,-f+(-.5*o-e)*d),this.ctx.arcTo(p+.5*u+e,-f+(-.5*o-e)*d,p+.5*u+e,-f+(-.5*o-e+h)*d,h),this.ctx.lineTo(p+.5*u+e,-f+(.5*o+e-h)*d),this.ctx.arcTo(p+.5*u+e,-f+(.5*o+e)*d,p+.5*u+e-h,-f+(.5*o+e)*d,h),this.ctx.lineTo(p+10,-f+(.5*o+e)*d),this.ctx.closePath(),this.ctx.fillStyle="rgba(255,30,30,.85)",this.ctx.fill(),this.ctx.fillStyle="white",this.ctx.fillText(c,p,-f),this.ctx.scale(1,-1)}}function K(a){return a&&a.__esModule&&Object.prototype.hasOwnProperty.call(a,"default")?a.default:a}var q,O;function U(){if(O)return q;O=1,q={determinant:a,inverse:l,cholesky:r};function a(t,i){if(typeof t=="number")return t;if(t.length==1)return t[0][0];if(t.length==2)return t[0][0]*t[1][1]-t[0][1]*t[1][0];if(t.length==3)return i?Math.pow(i[0][0]*i[1][1]*i[2][2],2):t[0][0]*(t[1][1]*t[2][2]-t[1][2]*t[2][1])+t[0][1]*(t[1][2]*t[2][0]-t[1][0]*t[2][2])+t[0][2]*(t[1][0]*t[2][1]-t[1][1]*t[2][0]);for(var n=1,e=i||r(t),h=0;h<t.length;h++)n*=e[h][h];return n*n}function l(t,i){if(typeof t=="number")return 1/t;if(t.length==1)return[[1/t[0][0]]];if(t.length==2){var n=t[0][0],e=t[0][1],h=t[1][1],c=1/(n*h-e*e);return[[h*c,-e*c],[-e*c,n*c]]}else if(t.length==3){var n=t[0][0],h=t[1][0],o=t[1][1],u=t[2][0],d=t[2][1],f=t[2][2],p=o*f-d*d,w=d*u-h*f,S=n*f-u*u,k=h*d-o*u,_=h*u-n*d,W=n*o-h*h,m=1/(n*p+h*w+u*k);return[[p*m,w*m,k*m],[w*m,S*m,_*m],[k*m,_*m,W*m]]}for(var x=s(i||r(t)),f=0;f<x.length;f++)for(var L=0;L<=f;L++){for(var R=0,I=f;I<x.length;I++)R+=x[I][f]*x[I][L];x[f][L]=R,x[L][f]=R}return x}function r(t){if(typeof t=="number")return Math.sqrt(t);var i=t.length;if(i==1)return[[Math.sqrt(t[0][0])]];for(var n=Array(i),e=0;e<i;e++)for(var h=n[e]=Array(i).fill(0),c=0;c<e+1;c++){for(var o=n[c],u=t[e][c],d=0;d<c;d++)u-=h[d]*o[d];h[c]=e==c?Math.sqrt(u):u/o[c]}return n}function s(t){for(var i=t.length,n=Array(i),e=0;e<i;e++)n[e]=Array(i);for(var h=0;h<i;h++){n[h][h]=1/t[h][h];for(var e=h+1;e<i;e++){for(var c=0,o=h;o<e;o++)c-=t[e][o]*n[o][h];n[e][h]=c/t[e][e]}}return n}return q}var $=U();const b=K($);class J{constructor({weights:l,means:r,covariances:s,bufferSize:t}){this.dimensions=r[0].length,this.clusters=r.length,this.weights=l?l.slice():Array(this.clusters).fill(1/this.clusters),this.means=r.map(i=>i.slice()),this.covariances=s.map(i=>i.map(n=>n.slice())),this.bufferSize=t??1e6,this.data=Array(this.bufferSize),this.idx=0,this.dataLength=0,this.tmpArr=new Float32Array(this.bufferSize),this.cResps=Array(this.clusters);for(let i=0;i<this.clusters;i++)this.cResps[i]=new Float32Array(this.bufferSize);this.singularity=null,this.covCholeskies=null,this.covDeterminants=this.covariances.map(i=>b.determinant(i))}addPoint(l){this.data[this.idx]=l,this.idx++,this.idx==this.bufferSize&&(this.idx=0),this.dataLength<this.bufferSize&&this.dataLength++}runEM(l=1){if(this.dataLength!=0)for(let r=0;r<l;r++){if(Q.call(this),V.call(this),this.dimensions>3){this.covCholeskies=Array(this.clusters);for(let s=0;s<this.clusters;s++)this.covCholeskies[s]=b.cholesky(this.covariances[s])}for(let s=0;s<this.clusters;s++){let t=this.covCholeskies&&this.covCholeskies[s];this.covDeterminants[s]=b.determinant(this.covariances[s],t)}for(let s=0;s<this.clusters;s++)if(this.covDeterminants[s]<=0)return this.singularity=this.means[s],this.singularity}}predict(l){let r=Array(this.clusters);for(let s=0;s<this.clusters;s++){let t=this.weights[s],i=this.means[s],n=this.covariances[s],e=this.covDeterminants[s],h=this.covCholeskies&&this.covCholeskies[s];r[s]=t*G(l,i,n,e,h)}return r}predictNormalize(l){let r=this.predict(l),s=0;for(let i=0;i<this.clusters;i++)s+=r[i];let t=1/s;for(let i=0;i<this.clusters;i++)r[i]*=t;return r}}function Q(){this.tmpArr.fill(0,0,this.dataLength);for(let a=0;a<this.clusters;a++){let l=this.cResps[a],r=this.weights[a],s=this.means[a],t=this.covariances[a],i=this.covDeterminants[a],n=this.covCholeskies&&this.covCholeskies[a];for(let e=0;e<this.dataLength;e++)this.tmpArr[e]+=l[e]=r*G(this.data[e],s,t,i,n)}for(let a=0;a<this.dataLength;a++)this.tmpArr[a]=1/this.tmpArr[a];for(let a=0;a<this.clusters;a++){let l=this.cResps[a];for(let r=0;r<this.dataLength;r++)l[r]*=this.tmpArr[r]}}function V(){for(let a=0;a<this.clusters;a++){let l=this.cResps[a],r=0;for(let e=0;e<this.dataLength;e++)r+=l[e];let s=1/r;this.weights[a]=r/this.dataLength;let t=this.means[a].fill(0);for(let e=0;e<this.dataLength;e++)for(let h=0;h<this.dimensions;h++)t[h]+=l[e]*this.data[e][h];for(let e=0;e<this.dimensions;e++)t[e]*=s;let i=this.covariances[a];for(let e=0;e<this.dimensions;e++)i[e].fill(0);let n=Array(this.dimensions);for(let e=0;e<this.dataLength;e++){let h=this.data[e];for(let c=0;c<this.dimensions;c++)n[c]=h[c]-t[c];for(let c=0;c<this.dimensions;c++)for(let o=0;o<this.dimensions;o++)i[c][o]+=l[e]*n[c]*n[o]}for(let e=0;e<this.dimensions;e++)for(let h=0;h<this.dimensions;h++)i[e][h]*=s}}const Z=Math.log(2*Math.PI);function G(a,l,r,s,t){let i=typeof a=="number"?1:a.length,n=t||(i>3?b.cholesky(r):null),e=s!=null?1/s:1/b.determinant(r,n),h=j(b.inverse(r,n),l,a);return Math.sqrt(e)*Math.exp(-.5*(h+i*Z))}function j(a,l,r){if(typeof r=="number")return a*(r-l)*(r-l);if(r.length==1)return a[0][0]*(r[0]-l[0])*(r[0]-l[0]);if(r.length==2){let e=r[0]-l[0],h=r[1]-l[1];return a[0][0]*e*e+(a[0][1]+a[1][0])*e*h+a[1][1]*h*h}let s=0,t=r.length,i,n;for(i=0;i<t;i++)for(n=0;n<t;n++)s+=a[i][n]*(r[i]-l[i])*(r[n]-l[n]);return s}const v=document.querySelector(".graph canvas"),M=-100,P=100,E=-100,z=100,T=new Y(v,M,P,E,z);let g=null;const y=[[-49,64],[-48,57],[-44,58],[-42,52],[-37,45],[-37,49],[-40,55],[-34,47],[-31,43],[-32,40],[-37,42],[-42,48],[-46,54],[-31,39],[-28,41],[-28,38],[-34,37],[-31,0],[-37,0],[-44,-7],[-51,-17],[-51,-28],[-41,-30],[-24,-20],[-18,-14],[-20,-4],[-26,-1],[-34,-27],[-27,-9],[-35,-13],[-45,-20],[-35,-19],[-31,-15],[-35,-5],[-40,-14],[-38,-16],[-36,-14],[-33,-12],[-30,-10],[57,-34],[54,-37],[52,-38],[50,-41],[46,-45],[45,-46],[42,-51],[39,-55],[37,-58],[34,-62],[30,-66],[27,-69],[25,-72],[22,-77],[19,-80],[17,-83],[14,-86],[12,-89],[24,-74],[26,-68],[28,-65],[31,-61],[35,-58],[37,-57],[38,-54],[43,-50],[37,-60],[36,-61],[34,-63],[29,-66],[21,-32],[28,-39],[38,-43],[55,-49],[66,-43],[72,-33],[73,-17],[62,-7],[52,-1],[40,-1],[32,-3],[25,-9],[23,-20],[28,-28],[60,-29],[63,-26],[42,-47],[42,-52],[46,-49],[49,-43],[38,-48],[40,-51],[33,-55],[32,-65],[41,-12],[36,-17],[57,-14],[63,-17],[63,-33],[54,-22],[43,-23],[41,-35],[59,-40],[49,-28],[49,-18],[33,-33],[37,-27],[47,-35],[49,-21],[46,-26],[51,-28],[55,-26]],B=["rgb(228,  26,  28)","rgb( 55, 126, 184)","rgb( 77, 175,  74)","rgb(152,  78, 163)","rgb(255, 127,   0)","rgb(255, 255,  51)","rgb(166,  86,  40)"];v.addEventListener("click",function(a){let l=v.width,r=v.height,s=[a.offsetX/l*(P-M)+M,a.offsetY/r*(z-E)+E],t=document.getElementById("number-of-points"),i=Number(t.options[t.selectedIndex].text);if(i==1)y.push(s),g&&g.addPoint(s);else for(let n=0;n<i;n++){let e=Math.random()*2*Math.PI/i+n/i*2*Math.PI,h=Math.random()*(P-M)*.04,c=[s[0]+h*Math.cos(e),s[1]+h*Math.sin(e)];y.push(c),g&&g.addPoint(c)}C()});N();window.addEventListener("resize",N);function N(){v.width=v.clientWidth,v.height=v.clientHeight,C()}function C(){if(T.clearAll(),g){let a=y.map(l=>g.predict(l)).map(l=>l.reduce((r,s,t,i)=>s>i[r]?t:r,0)).map(l=>B[l]);for(let l=0;l<g.clusters;l++)T.ellipse(g.means[l],g.covariances[l],B[l]);T.points(y,a),g.singularity&&T.singularity(g.singularity)}else T.points(y)}document.getElementById("btn-clear").addEventListener("click",function(){y.length=0,g=null,C()});document.getElementById("btn-run-a").addEventListener("click",a=>H(1));document.getElementById("btn-run-b").addEventListener("click",a=>H(10));document.getElementById("btn-init-clusters").addEventListener("click",function(){F(),C()});function H(a){if(g){if(g.singularity)return;g.runEM(a)}else F();C()}function F(){let a=document.getElementById("number-of-clusters"),l=Number(a.options[a.selectedIndex].text),r=P-M,s=z-E,t=Array(l).fill(0).map(n=>[M+Math.random()*r,E+Math.random()*s]),i=Array(l).fill(0).map(n=>[[r*r*.01,0],[0,s*s*.01]]);g=new J({dimensions:2,bufferSize:1e3,weights:Array(l).fill(1/l),means:t,covariances:i}),y.forEach(n=>g.addPoint(n))}
